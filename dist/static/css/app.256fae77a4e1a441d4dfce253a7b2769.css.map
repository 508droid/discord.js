{"version":3,"sources":["webpack:///webpack:///src/components/docs/Sidebar.vue","webpack:///webpack:///src/components/docs/classviewer/Overview.vue","webpack:///webpack:///src/components/docs/classviewer/VarTypeRender.vue","webpack:///webpack:///src/components/docs/classviewer/PropRenderer.vue","webpack:///webpack:///src/components/docs/classviewer/SourceButton.vue","webpack:///webpack:///src/components/docs/classviewer/LinkButton.vue","webpack:///webpack:///src/components/docs/classviewer/InheritedBadge.vue","webpack:///webpack:///src/components/docs/classviewer/PrivateBadge.vue","webpack:///webpack:///src/components/docs/classviewer/MethodRenderer.vue","webpack:///webpack:///src/components/docs/classviewer/Param.vue","webpack:///webpack:///src/components/docs/classviewer/ParamTable.vue","webpack:///webpack:///src/components/docs/classviewer/Example.vue","webpack:///webpack:///src/styles/src/styles/common.scss","webpack:///webpack:///src/styles/src/styles/navbar.scss","webpack:///webpack:///src/styles/src/styles/theme.scss","webpack:///webpack:///src/styles/src/styles/slide.scss","webpack:///webpack:///src/styles/src/styles/IndexView.scss","webpack:///webpack:///src/styles/src/styles/mq.scss","webpack:///webpack:///src/styles/src/styles/util.scss","webpack:///webpack:///src/styles/src/styles/footer.scss","webpack:///webpack:///src/styles/src/styles/DocsBar.scss","webpack:///webpack:///src/styles/src/styles/DocsSidebar.scss","webpack:///webpack:///src/styles/src/styles/DocsViewer.scss"],"names":[],"mappings":"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","file":"static/css/app.256fae77a4e1a441d4dfce253a7b2769.css","sourcesContent":[".fa.toggle[_v-042ede50]{color:#ccc;font-size:22px;margin-left:4px;cursor:pointer}.fa.toggle[_v-042ede50]:hover{color:#666}ul .fa[_v-042ede50]{color:#aaa}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/Sidebar.vue\n **/",".docs-class-overview{display:inline-block}.docs-class-overview h4{margin:0.2rem 0}.docs-class-overview ul{margin:0;font-size:14px;color:#333}.docs-class-overview ul li{cursor:pointer}.docs-class-overview ul .inherited{color:#777;font-size:13px}.docs-class-overview ul .type{color:#2196F3;font-family:'Roboto Mono', monospace;font-weight:bold}.docs-class-overview ul li:hover{text-decoration:underline}.docs-class-overview .docs-class-overview-segment{-webkit-box-flex:1;-ms-flex:1;flex:1}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/classviewer/Overview.vue\n **/",".var-ref[_v-1e941c99]{color:#2196F3;font-weight:bold;font-family:'Roboto Mono';cursor:pointer}.var-ref[_v-1e941c99]:hover{color:#82c4f8}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/classviewer/VarTypeRender.vue\n **/",".desc[_v-293073d8]{border-left:3px solid #ddd;padding:0 1rem;color:#555}h3[_v-293073d8]{font-family:'Roboto Mono';font-weight:500}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/classviewer/PropRenderer.vue\n **/","a[_v-cb5bff0a]{text-decoration:none;color:#eee}a[_v-cb5bff0a]:hover{color:#333}.scrolled a[_v-cb5bff0a]{color:#777}.scrolled a[_v-cb5bff0a]:hover{color:black}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/classviewer/SourceButton.vue\n **/","i[_v-e3d3d9cc]{text-decoration:none;color:#eee;cursor:pointer}i[_v-e3d3d9cc]:hover{color:#333}.scrolled i[_v-e3d3d9cc]{color:#777}.scrolled i[_v-e3d3d9cc]:hover{color:black}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/classviewer/LinkButton.vue\n **/",".badge[_v-4b64aa92]{background:#82c4f8;color:white;padding:4px;font-weight:bold;font-family:'Roboto', sans-serif;text-transform:uppercase;font-size:14px;cursor:pointer}.badge[_v-4b64aa92]:hover{background:#2196F3}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/classviewer/InheritedBadge.vue\n **/",".badge[_v-c9fd98a4]{background:#c982f8;color:white;padding:4px;font-weight:bold;font-family:'Roboto', sans-serif;text-transform:uppercase;font-size:14px;cursor:pointer}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/classviewer/PrivateBadge.vue\n **/",".desc[_v-20a33112]{border-left:3px solid #ddd;padding:0 1rem;color:#555}h3[_v-20a33112]{font-family:'Roboto Mono';font-weight:500}.param.optional[_v-20a33112]:before{content:\"[\"}.param.optional[_v-20a33112]:after{content:\"]\"}.param[_v-20a33112]:not(:last-child):after{content:\", \"}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/classviewer/MethodRenderer.vue\n **/","span[_v-6febc7a2]{font-weight:300;color:#555;font-size:1rem}.optional[_v-6febc7a2]{color:#777;font-style:italic}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/classviewer/Param.vue\n **/","tr[_v-674c740f]{color:#222;font-size:14px;background:#eee}tr[_v-674c740f]:nth-child(even){background:#fcfcfc}td[_v-674c740f],th[_v-674c740f]{text-align:center}td[_v-674c740f]:first-child{font-family:'Roboto Mono', monospace;font-weight:bold}td[_v-674c740f]:last-child{text-align:left}td[_v-674c740f],th[_v-674c740f]{padding:0.5rem}.data-type[_v-674c740f]{font-weight:bold;color:#2196F3;font-family:'Roboto Mono', monospace;cursor:pointer}.data-type[_v-674c740f]:hover{color:#82c4f8}tr[_v-674c740f]:first-child{text-transform:uppercase;font-size:14px;color:white;background:#0c7cd5}td.optional[_v-674c740f]{font-weight:500}table[_v-674c740f]{border-collapse:collapse;box-shadow:0 0 0.5rem #999}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/classviewer/ParamTable.vue\n **/",".codeblock[_v-efa8b7e8]{padding-bottom:4px}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/components/docs/classviewer/Example.vue\n **/","body {\r\n  font-family: 'Raleway', sans-serif;\r\n  margin: 0;\r\n  text-align: center;\r\n  background: #222;\r\n}\r\n\r\n.container {\r\n  width: 100%;\r\n  max-width: 1024px;\r\n  text-align: left;\r\n  display: inline-block;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/styles/src/styles/common.scss\n **/",".navbar {\r\n  background: #222;\r\n  height: 3rem;\r\n  line-height: 3rem;\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  .title{\r\n    font-weight: bold;\r\n    font-size: 1.2rem;\r\n    color: white;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    padding: 0 1rem;\r\n    background: $primary_color;\r\n  }\r\n\r\n  .title:hover {\r\n    background: darken($primary_color, 10%);\r\n  }\r\n\r\n  .links {\r\n    float: right;\r\n\r\n    .link {\r\n      color: white;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .link:hover {\r\n      background: #111;\r\n    }\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/styles/src/styles/navbar.scss\n **/","$primary_color : #2196F3;\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/styles/src/styles/theme.scss\n **/",".slide {\r\n  padding: 1rem;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/styles/src/styles/slide.scss\n **/",".indexView {\r\n  .slide .container {\r\n    text-align: center;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 4rem;\r\n    margin: 0;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 2rem;\r\n    margin: 0;\r\n  }\r\n\r\n  p {\r\n    font-size: 1.2rem;\r\n    line-height: 2rem;\r\n\r\n    @include mq($until: desktop) {\r\n      margin:0 1rem;\r\n    }\r\n\r\n    a {\r\n      text-decoration: none;\r\n      font-weight: bold;\r\n      color: $primary_color;\r\n    }\r\n  }\r\n\r\n  .slide {\r\n    @include mq($until:desktop) {\r\n      padding: 4rem 0;\r\n    }\r\n    @include mq($from:desktop) {\r\n      padding: 8rem 0;\r\n    }\r\n  }\r\n\r\n  .slide:nth-child(1) {\r\n    @include bg-gradient-t2b($primary_color, darken($primary_color, 10%));\r\n    color: white;\r\n    h1 {\r\n      text-shadow: 0 3px 0 #555, 0 0 1rem black;\r\n    }\r\n    .code {\r\n      font-family: 'Droid Sans Mono', monospace;\r\n      background: #fafafa;\r\n      display: inline-block;\r\n      margin: 3rem;\r\n      color: black;\r\n      padding: 1rem;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n\r\n  .slide:nth-child(2), .slide:nth-child(3) {\r\n    background: #fafafa;\r\n    @include mq($until:desktop) {\r\n      padding: 2rem 0;\r\n    }\r\n    @include mq($from:desktop) {\r\n      padding: 4rem 0;\r\n    }\r\n  }\r\n\r\n  .slide:nth-child(3) {\r\n    background: #eee;\r\n    .stat {\r\n      margin: 1rem;\r\n      font-size: 2rem;\r\n      color: #777;\r\n    }\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/styles/src/styles/IndexView.scss\n **/","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\r\n                  // See https://github.com/sass-mq/sass-mq/pull/10\r\n\r\n/// Base font size on the `<body>` element\r\n/// @type Number (unit)\r\n$mq-base-font-size: 16px !default;\r\n\r\n/// Responsive mode\r\n///\r\n/// Set to `false` to enable support for browsers that do not support @media queries,\r\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\r\n///\r\n/// You could create a stylesheet served exclusively to older browsers,\r\n/// where @media queries are rasterized\r\n///\r\n/// @example scss\r\n///  // old-ie.scss\r\n///  $mq-responsive: false;\r\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\r\n///                   // larger breakpoints will be ignored\r\n///\r\n/// @type Boolean\r\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\r\n$mq-responsive: true !default;\r\n\r\n/// Breakpoint list\r\n///\r\n/// Name your breakpoints in a way that creates a ubiquitous language\r\n/// across team members. It will improve communication between\r\n/// stakeholders, designers, developers, and testers.\r\n///\r\n/// @type Map\r\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\r\n$mq-breakpoints: (\r\n    mobile:  320px,\r\n    tablet:  740px,\r\n    desktop: 980px,\r\n    wide:    1024px\r\n) !default;\r\n\r\n/// Static breakpoint (for fixed-width layouts)\r\n///\r\n/// Define the breakpoint from $mq-breakpoints that should\r\n/// be used as the target width for the fixed-width layout\r\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\r\n///\r\n/// @example scss\r\n///  // tablet-only.scss\r\n///  //\r\n///  // Ignore all styles above tablet breakpoint,\r\n///  // and fix the styles (e.g. layout) at tablet width\r\n///  $mq-responsive: false;\r\n///  $mq-static-breakpoint: tablet;\r\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\r\n///                   // larger breakpoints will be ignored\r\n///\r\n/// @type String\r\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\r\n$mq-static-breakpoint: desktop !default;\r\n\r\n/// Show breakpoints in the top right corner\r\n///\r\n/// If you want to display the currently active breakpoint in the top\r\n/// right corner of your site during development, add the breakpoints\r\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\r\n///\r\n/// @type map\r\n$mq-show-breakpoints: () !default;\r\n\r\n/// Customize the media type (e.g. `@media screen` or `@media print`)\r\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\r\n///\r\n/// @type String\r\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\r\n$mq-media-type: all !default;\r\n\r\n/// Convert pixels to ems\r\n///\r\n/// @param {Number} $px - value to convert\r\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\r\n///\r\n/// @example scss\r\n///  $font-size-in-ems: mq-px2em(16px);\r\n///  p { font-size: mq-px2em(16px); }\r\n///\r\n/// @requires $mq-base-font-size\r\n/// @returns {Number}\r\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\r\n    @if unitless($px) {\r\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\r\n        @return mq-px2em($px * 1px, $base-font-size);\r\n    } @else if unit($px) == em {\r\n        @return $px;\r\n    }\r\n    @return ($px / $base-font-size) * 1em;\r\n}\r\n\r\n/// Get a breakpoint's width\r\n///\r\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\r\n///\r\n/// @example scss\r\n///  $tablet-width: mq-get-breakpoint-width(tablet);\r\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\r\n///\r\n/// @requires {Variable} $mq-breakpoints\r\n///\r\n/// @returns {Number} Value in pixels\r\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\r\n    @if map-has-key($breakpoints, $name) {\r\n        @return map-get($breakpoints, $name);\r\n    } @else {\r\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\r\n    }\r\n}\r\n\r\n/// Media Query mixin\r\n///\r\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\r\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\r\n/// @param {String | Boolean} $and (false) - Additional media query parameters\r\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\r\n///\r\n/// @ignore Undocumented API, for advanced use only:\r\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\r\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\r\n///\r\n/// @content styling rules, wrapped into a @media query when $responsive is true\r\n///\r\n/// @requires {Variable} $mq-media-type\r\n/// @requires {Variable} $mq-breakpoints\r\n/// @requires {Variable} $mq-static-breakpoint\r\n/// @requires {function} mq-px2em\r\n/// @requires {function} mq-get-breakpoint-width\r\n///\r\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\r\n///\r\n/// @example scss\r\n///  .element {\r\n///    @include mq($from: mobile) {\r\n///      color: red;\r\n///    }\r\n///    @include mq($until: tablet) {\r\n///      color: blue;\r\n///    }\r\n///    @include mq(mobile, tablet) {\r\n///      color: green;\r\n///    }\r\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\r\n///      color: teal;\r\n///    }\r\n///    @include mq(950px) {\r\n///      color: hotpink;\r\n///    }\r\n///    @include mq(tablet, $media-type: screen) {\r\n///      color: hotpink;\r\n///    }\r\n///    // Advanced use:\r\n///    $my-breakpoints: (L: 900px, XL: 1200px);\r\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\r\n///      color: hotpink;\r\n///    }\r\n///  }\r\n@mixin mq(\r\n    $from: false,\r\n    $until: false,\r\n    $and: false,\r\n    $media-type: $mq-media-type,\r\n    $breakpoints: $mq-breakpoints,\r\n    $responsive: $mq-responsive,\r\n    $static-breakpoint: $mq-static-breakpoint\r\n) {\r\n    $min-width: 0;\r\n    $max-width: 0;\r\n    $media-query: '';\r\n\r\n    // From: this breakpoint (inclusive)\r\n    @if $from {\r\n        @if type-of($from) == number {\r\n            $min-width: mq-px2em($from);\r\n        } @else {\r\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\r\n        }\r\n    }\r\n\r\n    // Until: that breakpoint (exclusive)\r\n    @if $until {\r\n        @if type-of($until) == number {\r\n            $max-width: mq-px2em($until);\r\n        } @else {\r\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\r\n        }\r\n    }\r\n\r\n    // Responsive support is disabled, rasterize the output outside @media blocks\r\n    // The browser will rely on the cascade itself.\r\n    @if $responsive == false {\r\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\r\n        $target-width: mq-px2em($static-breakpoint-width);\r\n\r\n        // Output only rules that start at or span our target width\r\n        @if (\r\n            $and == false\r\n            and $min-width <= $target-width\r\n            and (\r\n                $until == false or $max-width >= $target-width\r\n            )\r\n        ) {\r\n            @content;\r\n        }\r\n    }\r\n\r\n    // Responsive support is enabled, output rules inside @media queries\r\n    @else {\r\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\r\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\r\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\r\n\r\n        // Remove unnecessary media query prefix 'all and '\r\n        @if ($media-type == 'all' and $media-query != '') {\r\n            $media-type: '';\r\n            $media-query: str-slice(unquote($media-query), 6);\r\n        }\r\n\r\n        @media #{$media-type + $media-query} {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n/// Add a breakpoint\r\n///\r\n/// @param {String} $name - Name of the breakpoint\r\n/// @param {Number} $width - Width of the breakpoint\r\n///\r\n/// @requires {Variable} $mq-breakpoints\r\n///\r\n/// @example scss\r\n///  @include mq-add-breakpoint(tvscreen, 1920px);\r\n///  @include mq(tvscreen) {}\r\n@mixin mq-add-breakpoint($name, $width) {\r\n    $new-breakpoint: ($name: $width);\r\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\r\n}\r\n\r\n/// Show the active breakpoint in the top right corner of the viewport\r\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\r\n///\r\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\r\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\r\n///\r\n/// @requires {Variable} $mq-breakpoints\r\n/// @requires {Variable} $mq-show-breakpoints\r\n///\r\n/// @example scss\r\n///  // Show breakpoints using global settings\r\n///  @include mq-show-breakpoints;\r\n///\r\n///  // Show breakpoints using custom settings\r\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\r\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\r\n    body:before {\r\n        background-color: #FCF8E3;\r\n        border-bottom: 1px solid #FBEED5;\r\n        border-left: 1px solid #FBEED5;\r\n        color: #C09853;\r\n        font: small-caption;\r\n        padding: 3px 6px;\r\n        pointer-events: none;\r\n        position: fixed;\r\n        right: 0;\r\n        top: 0;\r\n        z-index: 100;\r\n\r\n        // Loop through the breakpoints that should be shown\r\n        @each $show-breakpoint in $show-breakpoints {\r\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\r\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\r\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@if length($mq-show-breakpoints) > 0 {\r\n    @include mq-show-breakpoints;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/styles/src/styles/mq.scss\n **/","@mixin bg-gradient-t2b($start-colour, $end-colour) {\r\n    background-color: $start-colour;\r\n    background-image: -webkit-gradient(linear, left top, left bottom, from($start-colour), to($end-colour));\r\n    background-image: -webkit-linear-gradient(top, $start-colour, $end-colour);\r\n    background-image:    -moz-linear-gradient(top, $start-colour, $end-colour);\r\n    background-image:     -ms-linear-gradient(top, $start-colour, $end-colour);\r\n    background-image:      -o-linear-gradient(top, $start-colour, $end-colour);\r\n    background-image:         linear-gradient(top, $start-colour, $end-colour);\r\n    filter:            progid:DXImageTransform.Microsoft.gradient(start-colourStr='#{$start-colour}', end-colourStr='#{$end-colour}');\r\n}\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/styles/src/styles/util.scss\n **/","footer {\r\n  color: #666;\r\n  padding: 3rem;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: #666;\r\n  }\r\n\r\n  a:hover {\r\n    color: #aaa;\r\n  }\r\n\r\n  .container {\r\n    text-align: center;\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/styles/src/styles/footer.scss\n **/",".docs-navbar {\r\n  padding: 1rem;\r\n  background: #333;\r\n  color: white;\r\n  font-family: 'Roboto', sans-serif;\r\n\r\n  .title {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .choices {\r\n    margin-top: 0.2rem;\r\n    font-size: 0.9rem;\r\n    color: #aaa;\r\n\r\n    .choice {\r\n      color: #ddd;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .choice:hover {\r\n      font-weight: bold;\r\n      color: white;\r\n    }\r\n  }\r\n\r\n  .branchSelect {\r\n    margin-top: 0.2rem;\r\n    display: inline-block;\r\n\r\n    select {\r\n      background: #333;\r\n      color: white;\r\n      font-family: 'Droid Sans Mono', monospace;\r\n    }\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/styles/src/styles/DocsBar.scss\n **/",".docs-sidebar{\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n\r\n    li {\r\n      color: #444;\r\n      font-size: 0.9rem;\r\n      padding: 0.2rem;\r\n      padding-right: 4rem;\r\n    }\r\n\r\n    li:hover:not(:first-child) {\r\n      color: $primary_color;\r\n      text-decoration: underline;\r\n      cursor: pointer;\r\n      background: #eee;\r\n    }\r\n\r\n    li:first-child {\r\n      text-transform: uppercase;\r\n      font-weight: bold;\r\n      color: black;\r\n    }\r\n\r\n    li:last-child {\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .v-link-active {\r\n      background: #f5f5f5;\r\n    }\r\n\r\n    .private {\r\n      color: #aaa;\r\n    }\r\n  }\r\n\r\n  ul:last-child li:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/styles/src/styles/DocsSidebar.scss\n **/","@import 'DocsSidebar';\r\n\r\n.docs-viewer {\r\n  background: #fefefe;\r\n  color: #111;\r\n  padding: 3rem 1rem;\r\n  padding-top: 5rem;\r\n  font-family: 'Open Sans', sans-serif;\r\n\r\n  hr {\r\n    border: 0;\r\n    border-bottom: 1px solid #ddd;\r\n    margin: 1rem 0;\r\n  }\r\n\r\n  .doc-part-view {\r\n    display: inline-block;\r\n    border-left: 1px solid #eee;\r\n    padding-left: 2rem;\r\n    flex: 1;\r\n\r\n    p {\r\n      font-size: 14px;\r\n    }\r\n\r\n    h1 {\r\n      margin: 0;\r\n      color: #333;\r\n      font-weight: 300;\r\n    }\r\n  }\r\n\r\n  .info {\r\n    display: block;\r\n    background: lighten($primary_color, 42%);\r\n    padding: 1rem;\r\n    border:1px solid #ccc;\r\n  }\r\n\r\n  .info:before {\r\n    font-weight: bold;\r\n    content: \"Info: \";\r\n  }\r\n\r\n  .warn {\r\n    display: block;\r\n    background: lighten(#F32121, 42%);\r\n    padding: 1rem;\r\n    border:1px solid #ccc;\r\n  }\r\n\r\n  .warn:before {\r\n    font-weight: bold;\r\n    content: \"Warning! \";\r\n  }\r\n\r\n  .scrolled {\r\n    background: rgba(255, 255, 0, 0.3);\r\n  }\r\n}\r\n\r\n.docs-viewer > .container {\r\n  display: inline-flex;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/styles/src/styles/DocsViewer.scss\n **/"],"sourceRoot":""}